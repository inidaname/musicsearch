{
  "_args": [
    [
      {
        "raw": "gulp-newer",
        "scope": null,
        "escapedName": "gulp-newer",
        "name": "gulp-newer",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/asmausani/WebApps/MusicSearch"
    ]
  ],
  "_from": "gulp-newer@latest",
  "_id": "gulp-newer@1.3.0",
  "_inCache": true,
  "_location": "/gulp-newer",
  "_nodeVersion": "6.3.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/gulp-newer-1.3.0.tgz_1475618936440_0.6625388413667679"
  },
  "_npmUser": {
    "name": "tschaub",
    "email": "tim.schaub@gmail.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {
    "fs.realpath": "1.0.0",
    "inflight": "1.0.6",
    "inherits": "2.0.3",
    "minimatch": "3.0.4",
    "once": "1.3.3",
    "path-is-absolute": "1.0.1"
  },
  "_requested": {
    "raw": "gulp-newer",
    "scope": null,
    "escapedName": "gulp-newer",
    "name": "gulp-newer",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/gulp-newer/-/gulp-newer-1.3.0.tgz",
  "_shasum": "d50ecacbb822eda492b57324a6c85a07fd9a55c1",
  "_shrinkwrap": null,
  "_spec": "gulp-newer",
  "_where": "/Users/asmausani/WebApps/MusicSearch",
  "author": {
    "name": "Tim Schaub",
    "url": "http://tschaub.net/"
  },
  "bugs": {
    "url": "https://github.com/tschaub/gulp-newer/issues"
  },
  "dependencies": {
    "glob": "^7.0.3",
    "gulp-util": "^3.0.7",
    "kew": "^0.7.0"
  },
  "description": "Only pass through newer source files",
  "devDependencies": {
    "chai": "^3.5.0",
    "eslint": "^3.7.1",
    "eslint-config-tschaub": "^6.0.0",
    "gulp": "^3.9.1",
    "mocha": "^3.1.0",
    "mock-fs": "^3.11.0"
  },
  "directories": {},
  "dist": {
    "shasum": "d50ecacbb822eda492b57324a6c85a07fd9a55c1",
    "tarball": "https://registry.npmjs.org/gulp-newer/-/gulp-newer-1.3.0.tgz"
  },
  "eslintConfig": {
    "extends": "tschaub"
  },
  "gitHead": "7e41955b90d00c7a5848bdc0d21cc27072a60d35",
  "homepage": "https://github.com/tschaub/gulp-newer",
  "keywords": [
    "gulp",
    "gulpplugin",
    "newer",
    "mtime"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "tschaub",
      "email": "tim.schaub@gmail.com"
    }
  ],
  "name": "gulp-newer",
  "optionalDependencies": {},
  "readme": "# `gulp-newer`\n\nA [Gulp](http://gulpjs.com/) plugin for passing through only those source files that are newer than corresponding destination files.\n\n## Install\n\n```\nnpm install gulp-newer --save-dev\n```\n\n## Example\n\n### Using `newer` with 1:1 source:dest mappings\n\nThe default task in the example below sets up a watch that minifies images on changes.  Piping the source files to `newer` before `imagemin` ensures that only those images that have changed are minified.  The `newer` plugin is configured with the directory path for minified images.\n\n```js\nvar gulp = require('gulp');\nvar newer = require('gulp-newer');\nvar imagemin = require('gulp-imagemin');\n\nvar imgSrc = 'src/img/**';\nvar imgDest = 'build/img';\n\n// Minify any new images\ngulp.task('images', function() {\n\n  // Add the newer pipe to pass through newer images only\n  return gulp.src(imgSrc)\n      .pipe(newer(imgDest))\n      .pipe(imagemin())\n      .pipe(gulp.dest(imgDest));\n\n});\n\ngulp.task('default', function() {\n  gulp.watch(imgSrc, ['images']);\n});\n```\n\n### Using `newer` with many:1 source:dest mappings\n\nPlugins like `gulp-concat` take many source files and generate a single destination file.  In this case, the `newer` stream will pass through *all* source files if *any one* of them is newer than the destination file.  The `newer` plugin is configured with the destination file path.\n\n```js\nvar gulp = require('gulp');\nvar newer = require('gulp-newer');\nvar concat = require('gulp-concat');\n\n// Concatenate all if any are newer\ngulp.task('concat', function() {\n\n  // Add the newer pipe to pass through all sources if any are newer\n  return gulp.src('lib/*.js')\n      .pipe(newer('dist/all.js'))\n      .pipe(concat('all.js'))\n      .pipe(gulp.dest('dist'));\n\n});\n```\n\n\n## API\n\n### `newer(dest)`\n* **dest** - `string` Path to destination directory or file.\n\n### `newer(options)`\n\n * **options.dest** - `string` As above, *required*.\n * **options.ext** - `string` Source files will be matched to destination files with the provided extension (e.g. '.css').\n * **options.map** - `function` Map relative source paths to relative destination paths (e.g. `function(relativePath) { return relativePath + '.bak'; }`)\n * **options.extra** - `string` or `array` An extra file, file glob, or list of extra files and/or globs, to check for updated time stamp(s). If any of these files are newer than the destination files, then all source files will be passed into the stream.\n\nCreate a [transform stream](http://nodejs.org/api/stream.html#stream_class_stream_transform_1) that passes through files whose modification time is more recent than the corresponding destination file's modification time.\n\nIf `dest` is a directory path, the `newer` stream will check for files in the destination directory with the same relative path as source files.  Source files that have been modified more recently than the resolved destination file will be passed through.  If the `dest` directory or resolved destination file does not exist, all source files will be passed through.\n\nIf `dest` is a file path, the `newer` stream will pass through *all* files if *any one* of them has been modified more recently than the destination file.  If the `dest` file does not exist, all source files will be passed through.\n\n[![Current Status](https://secure.travis-ci.org/tschaub/gulp-newer.png?branch=master)](https://travis-ci.org/tschaub/gulp-newer)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/tschaub/gulp-newer.git"
  },
  "scripts": {
    "pretest": "eslint index.js spec.js",
    "test": "mocha spec.js"
  },
  "version": "1.3.0"
}
