{
  "_args": [
    [
      {
        "raw": "calipers@^2.0.0",
        "scope": null,
        "escapedName": "calipers",
        "name": "calipers",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "/Users/asmausani/WebApps/MusicSearch/node_modules/assets"
    ]
  ],
  "_from": "calipers@>=2.0.0 <3.0.0",
  "_id": "calipers@2.0.0",
  "_inCache": true,
  "_location": "/calipers",
  "_nodeVersion": "0.12.2",
  "_npmUser": {
    "name": "lob",
    "email": "engineering@lob.com"
  },
  "_npmVersion": "3.3.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "calipers@^2.0.0",
    "scope": null,
    "escapedName": "calipers",
    "name": "calipers",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/assets"
  ],
  "_resolved": "https://registry.npmjs.org/calipers/-/calipers-2.0.0.tgz",
  "_shasum": "bdf221c6a62f603b8ddd9340cacd9c79c1a03fce",
  "_shrinkwrap": null,
  "_spec": "calipers@^2.0.0",
  "_where": "/Users/asmausani/WebApps/MusicSearch/node_modules/assets",
  "author": {
    "name": "Marcus Gartner"
  },
  "bugs": {
    "url": "https://github.com/calipersjs/calipers/issues"
  },
  "dependencies": {
    "bluebird": "3.x.x"
  },
  "description": "The fastest Node.js library for measuring image and PDF dimensions.",
  "devDependencies": {
    "calipers-png": "2.x.x",
    "chai": "2.x.x",
    "chai-as-promised": "4.x.x",
    "coveralls": "2.x.x",
    "eslint": "1.x.x",
    "eslint-config-lob": "1.x.x",
    "istanbul": "0.x.x",
    "mocha": "2.x.x",
    "mocha-lcov-reporter": "0.x.x"
  },
  "directories": {},
  "dist": {
    "shasum": "bdf221c6a62f603b8ddd9340cacd9c79c1a03fce",
    "tarball": "https://registry.npmjs.org/calipers/-/calipers-2.0.0.tgz"
  },
  "gitHead": "235faae814bef04c879078a85ffa58650e512fe8",
  "homepage": "https://github.com/calipersjs/calipers",
  "keywords": [
    "image",
    "size",
    "pdf",
    "png",
    "jpeg",
    "gif",
    "bmp",
    "svg",
    "webp"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "mgartner",
      "email": "marcus@lob.com"
    },
    {
      "name": "lob",
      "email": "support@lob.com"
    }
  ],
  "name": "calipers",
  "optionalDependencies": {},
  "readme": "<img src=\"https://s3-us-west-2.amazonaws.com/devassets.lob.com/calipers2.jpg\" width=\"700\">\n\n[![npm version](https://badge.fury.io/js/calipers.svg)](http://badge.fury.io/js/calipers) [![Build Status](https://travis-ci.org/lob/calipers.svg)](https://travis-ci.org/lob/calipers) [![Coverage Status](https://coveralls.io/repos/lob/calipers/badge.svg)](https://coveralls.io/r/lob/calipers)\n\nCurrent file types supported: **PDF, PNG, JPEG, GIF**\n\nCalipers was built to provide a method of determining the dimensions of an image or PDF much faster and less resource-intensive than shelling-out to ImageMagick. At [Lob](https://lob.com) we must validate image and PDF sizes during the lifecyle of an API request. The simplest way to do this is to shell-out to ImageMagick to identify the type and size of a file. For high-traffic servers, this becomes a major bottleneck due to the innefficiency of shelling-out.\n\nCalipers remains performant because it avoids spawning child processes and it doesn't read entire files into memory. Instead, it intelligently reads only parts of the files that are necessary to determine the type and the dimensions of the file.\n\n# Installation\n\nCalipers uses a plugin architecture to allow users to include support for only the specific file types they need to measure. This helps avoid wasting CPU cycles measuring file types that an application doesn't support, and ensures users must only install dependencies that are absolutely needed (e.g. Poppler for PDF support).\n\nTo use Calipers, you must install the core library and at least one plugin. For example, for PNG support:\n\n```\nnpm install --save calipers calipers-png\n```\n\nHere is a list of officially supported plugins:\n\nFile Type | Plugin\n--------- | ------\nPNG       | [calipers-png](https://github.com/calipersjs/calipers-png)\nJPEG      | [calipers-jpeg](https://github.com/calipersjs/calipers-jpeg)\nPDF †    | [calipers-pdf](https://github.com/calipersjs/calipers-pdf)\nGIF       | [calipers-gif](https://github.com/calipersjs/calipers-gif)\n\n† The [Poppler](http://poppler.freedesktop.org/) library C++ interface is required for PDF support. You must install Poppler before running `npm install calipers-pdf`.\n\nTo install Poppler on Mac OS X using Homebrew:\n\n```\nbrew install poppler\n```\n\nTo install Poppler on Ubuntu:\n\n```\napt-get install pkg-config\napt-get install libpoppler-cpp-dev\n```\n\nTo install Calipers, use NPM:\n\n```\nnpm install calipers\n```\n\n# Usage\n\nCalipers must be initialized by calling the required function with supported file types passed in. Use the plugin name's suffix (everything after the first \"-\") as an argument.\n\n```javascript\n// Initializes Calipers with support for calipers-png, calipers-jpeg, calipers-pdf.\nvar calipers = require('calipers')('png', 'jpeg', 'pdf');\n```\n\nCalipers exposes a single function, `measure`, once initialized.\n\n### `measure(filePath, [callback])`\n\nMeasures the file at the given path.\n- `filePath` - The path of the file.\n- `callback` - called when the file has been measured\n  - `err` - An Error is thrown for unsupported file types or corrupt files.\n  - `result` - Contains keys `type` and `pages`, where `type` is a string representing the file type (e.g. `'png'`), and `pages` is an array of objects with keys `width` and `height`. For image files, `pages` always has 1 element and `width` and `height` are the integer pixel dimensions. For PDF `width` and `height` are floating-point PostScript Point dimensions.\n\n# Examples\n\n```js\nvar calipers = require('calipers')('png', 'pdf');\n\n// You can use a callback:\ncalipers.measure('/path/to/document.pdf', function (err, result) {\n  // result:\n  // {\n  //   type: 'pdf',\n  //   pages: [\n  //     {\n  //       width: 450,\n  //       height: 670\n  //     },\n  //     {\n  //       width: 450,\n  //       height: 670\n  //     }\n  //   ]\n  // }\n});\n\n// Or you can use promises:\ncalipers.measure('/path/to/file.png')\n.then(function (result) {\n  // result:\n  // {\n  //   type: 'png',\n  //   pages: [\n  //     {\n  //       width: 450,\n  //       height: 670\n  //     }\n  //   ]\n  // }\n});\n```\n\n# Custom Plugins\n\n*More information coming soon.*\n\n# Benchmarks\n\nAs with all benchmarks, take these with a grain of salt. You can run the benchmarks on your own hardware: `node benchmark/index.js`.\n\nThese benchmarks are running 500 iterations of each method  on the 123x456 PDF, PNG, and JPEG with a concurrency setting of 50. They were run on a Mid-2014 13\" MacBook Pro with a 2.6 GHz Intel Core i5.\n\nMethod | FileType | Time (ms)\n------ | -------- | ----:\nexec: pdfinfo  | PDF | 1897\nexec: identify | PNG | 1801\nexec: identify | JPEG | 1820\ncalipers | PDF | 104\ncalipers | PNG | 41\ncalipers | JPEG | 80\n\n# Contribute\n\n### Bug Reporting\n\nThe easiest and most helpful way to contribute is to find a file that Calipers incorrectly measures, and submit an issue or PR with the file.\n\n### Creating a new Plugin\n\n*More information coming soon.*\n\n#### Inspiration\n\nInspired by netroy's image-size library: https://github.com/netroy/image-size\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/calipersjs/calipers.git"
  },
  "scripts": {
    "enforce": "istanbul check-coverage --statement 100 --branch 100 --function 100 --lines 100",
    "lint": "eslint .",
    "test": "NODE_ENV=test istanbul cover _mocha -- test --recursive --timeout 15000"
  },
  "version": "2.0.0"
}
